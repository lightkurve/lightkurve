# GitHub Actions workflow for Lightkurve's continuous integration.
#
# This file configures nine different jobs:
# 1) pytest on Linux, Python 3.9, with -m memtest (i.e. stress memory)
# 2) pytest on Linux, Python 3.9, with --remote-data enabled (i.e. get data from MAST).
# 3) pytest on Linux, Python 3.10.
# 4) pytest on Linux, Python 3.11.
# 5) pytest on Linux, Python 3.12.
# 6) pytest on Linux, Python 3.13.
# 7) pytest on Windows, Python 3.9.
# 8) pytest on OSX, Python 3.9.
# 9) flake8 syntax check.

name: Lightkurve-tests

on:
  # We always want to run tests on main
  push:
    branches:
      - main
  # And we'll also run tests on pull requests
  pull_request:

jobs:

  # Run unit tests on Linux
  pytest-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: ["3.9-remote-data", "3.9-memtest", "3.10", "3.11", "3.12", "3.13"]
        include:
          - name: "3.9-remote-data"
            python-version: "3.9"
            pytest-command: poetry run pytest --remote-data --doctest-modules
          - name: "3.9-memtest"
            python-version: "3.9"
            pytest-command: poetry run pytest -m memtest --remote-data
          - name: "3.10"
            python-version: "3.10"
            pytest-command: poetry run pytest
          - name: "3.11"
            python-version: "3.11"
            pytest-command: poetry run pytest
          - name: "3.12-remote-data"
            python-version: "3.12"
            pytest-command: poetry run pytest
          - name: "3.13"
            python-version: "3.13"
            pytest-command: poetry run pytest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry install --with dev
    - name: Test with ${{ matrix.pytest-command }}
      run: |
        ${{ matrix.pytest-command }}

  # Run unit tests on Windows
  pytest-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        name: [3.9]
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry install --with dev
    - name: Test with pytest
      run: |
        poetry run pytest

  # Run unit tests on Mac OSX
  pytest-osx:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry install --with dev
    - name: Test with pytest
      run: |
        poetry run pytest

  # Use the `flake8` tool to check for syntax errors
  flake8-linter:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install flake8
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry install --with dev
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude="setup.py,test_*"
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude="setup.py,test_*"
